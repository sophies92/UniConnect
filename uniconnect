#!/bin/bash

#------------------------------------------------------------------------------------------------------------
# Mount Aber Uni Storage Drives using sshfs
# Author: Sophie Short
#------------------------------------------------------------------------------------------------------------
version="0.1.4.3"
dateModified="2024:02:19"



Help()
{
    echo "=================================================="
    echo "                       HELP                       "
    echo "=================================================="
    echo
    echo "Syntax: uniconnect [targetDrive] [username]"
    echo "        uniconnect [-c|h|u|v|V] [optArgs]"
    echo
    echo "Suggested [targetDrive] options:"
    echo "      \"impacs\"  : 'P'drive"
    echo "      \"aber\"    : 'M'drive"
    echo
    echo "options:"
    echo
    echo "c     Cleanup mount directories."
    echo "      [optArgs] mount directory"
    echo
    echo "h     Print this Help text and exit."
    echo
    echo "u     Unmount targetDrive. Does NOT remove empty"
    echo "      directories."
    echo "      [optArgs] targetDrive"
    echo
    echo "v     Unmount targetDrive. Also removes"
    echo "      directories."
    echo "      [optArgs] targetDrive"
    echo
    echo "V     Print software version and exit."
    echo
}

Version()
{
    echo "uniconnect"
    echo
    echo "Version: " $version
    echo "Author: Sophie Short"
    echo "Last Modified: " $dateModified
    echo
}

Cleanup()
{
    if [ ! $1 = "" ]
    then
        if [ -d $HOME/$1 ];
        then
            for i in {1..5}
            do
                if [ -e $HOME/$1/* ]
                then
                    sleep 1
                else
                    rmdir $HOME/$1
                fi
            done
        fi
    fi
}

CheckMakeDir()
{
    if [ ! -d $HOME/${1^^} ]; 
    then
        mkdir $HOME/${1^^}
    fi
}

Connect()
{
    sshfs $2@shellsrv.dcs.aber.ac.uk:/$1/$2/ $HOME/${1^^}
}

Unmount()
{
    umount $HOME/$1
}

while getopts "c:hu:v:V" option; do
   case $option in
    c)  #clean directories
        Cleanup ${OPTARG^^}
        exit;;
    h)  # display Help
        Help
        exit;;
    u)  #unmount
        Unmount ${OPTARG^^}
        exit;;
    v)  # unmount, dont clean
        Unmount ${OPTARG^^}
        Cleanup ${OPTARG^^}
        exit;;
    V)  # Version info
        Version
        exit;;
    \?) # Invalid option
        echo "Error: Invalid option"
        exit;;
   esac
done

if [ ! $1 = "" ] && [ ! $2 = "" ];
then
    CheckMakeDir $1
    Connect $1 $2
else
    echo "[targetDrive] and [username] are required."
    echo "Check HELP \"-h\" for usage."
fi